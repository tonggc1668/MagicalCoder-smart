<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* Created by www.magicalcoder.com
* 如果你改变了此类 read 请将此行删除
* 799374340@qq.com
-->
<mapper namespace="ModuleMapper">
    <!-- Module -->
    <sql id="createTable">
    DROP TABLE `module`;
    CREATE TABLE `module` (
        PRIMARY KEY (`id`) ,
        `id` bigint(20) NOT NULL  AUTO_INCREMENT  COMMENT '主键' ,

        `module_name` varchar(20) COMMENT '模块唯一键'  DEFAULT  '' ,

        `module_url` varchar(200) COMMENT '模块url'  DEFAULT  '' ,

        `module_category_id` bigint(20) COMMENT '模块分类'  DEFAULT  '0' ,

        `sort_num` int(2) COMMENT '排序'  DEFAULT  '0' ,

        `module_title` varchar(50) COMMENT '模块标题'  DEFAULT  '' 
    )
    </sql>
    <sql id="selectSqlModule">
        module.id ,
        module.module_name moduleName,
        module.module_url moduleUrl,
        module.module_category_id moduleCategoryId,
        module.sort_num sortNum,
        module.module_title moduleTitle
    </sql>

   <sql id="whereSqlModule">
        <if test="id!=null "> and module.id = #{id}</if>
        <if test="moduleName!=null "> and module.module_name = #{moduleName}</if>
        <if test="moduleUrl!=null "> and module.module_url = #{moduleUrl}</if>
        <if test="moduleCategoryId!=null "> and module.module_category_id = #{moduleCategoryId}</if>
        <if test="sortNum!=null "> and module.sort_num = #{sortNum}</if>
        <if test="moduleTitle!=null "> and module.module_title = #{moduleTitle}</if>
                <if test="moduleNameFirst!=null "> and module.module_name <![CDATA[like]]>
                            concat('%',#{moduleNameFirst},'%')
                </if>
                <if test="moduleUrlFirst!=null "> and module.module_url <![CDATA[like]]>
                            concat('%',#{moduleUrlFirst},'%')
                </if>
                <if test="moduleCategoryIdFirst!=null "> and module.module_category_id <![CDATA[=]]>
                            #{moduleCategoryIdFirst}
                </if>
                <if test="moduleTitleFirst!=null "> and module.module_title <![CDATA[like]]>
                            concat('%',#{moduleTitleFirst},'%')
                </if>
        <if test="whereSql!=null"> ${whereSql}</if>
    </sql>

    <insert id="insertModule" parameterType="Module" >
        <selectKey resultType="Long" order="AFTER" keyProperty="id" >
            <choose>
                <when test="id==null">
                    SELECT LAST_INSERT_ID() AS id
                </when>
                <otherwise>SELECT #{id} as id</otherwise>
            </choose>
        </selectKey>
        insert into module (
    <if test="id!=null">`id`,</if>
            `module_name`,            `module_url`,            `module_category_id`,            `sort_num`,            `module_title`        )
        values(
            <if test="id!=null">#{id`},</if>
            <choose>
                <when test="moduleName==null">
                         ''
                </when>
                <otherwise>#{moduleName}</otherwise>
            </choose>,            <choose>
                <when test="moduleUrl==null">
                         ''
                </when>
                <otherwise>#{moduleUrl}</otherwise>
            </choose>,            <choose>
                <when test="moduleCategoryId==null">
                         '0'
                </when>
                <otherwise>#{moduleCategoryId}</otherwise>
            </choose>,            <choose>
                <when test="sortNum==null">
                         '0'
                </when>
                <otherwise>#{sortNum}</otherwise>
            </choose>,            <choose>
                <when test="moduleTitle==null">
                         ''
                </when>
                <otherwise>#{moduleTitle}</otherwise>
            </choose>        )
    </insert>

    <sql id="orderGroupLimit">
        <if test="groupBy != null"> group by  ${groupBy} </if>
        <if test="orderBy != null"> order by  ${orderBy} </if>
        <if test="limit != null"> LIMIT #{limitIndex},#{limit} </if>
    </sql>
    <select id="getModule" parameterType="hashmap" resultType="Module">
        select <include refid="selectSqlModule"/> from module module where 1=1 <include refid="whereSqlModule"/> <include refid="orderGroupLimit"/>
    </select>
    <select id="getModuleList" parameterType="hashmap" resultType="Module">
        select <include refid="selectSqlModule"/> from module module where 1=1 <include refid="whereSqlModule"/> <include refid="orderGroupLimit"/>
    </select>
    <select id="getModuleListCount" parameterType="hashmap" resultType="int">
        select count(1)  from module module
        where 1=1 <include refid="whereSqlModule"/> <if test="groupBy != null"> group by  ${groupBy} </if>
    </select>

    <update id="updateModule" parameterType="Module">
        update module module set
                <choose>
                    <when test="moduleName!=null">module.module_name=#{moduleName},</when>
                    <otherwise>
                        module.module_name='',
                    </otherwise>
                </choose>
                <choose>
                    <when test="moduleUrl!=null">module.module_url=#{moduleUrl},</when>
                    <otherwise>
                        module.module_url='',
                    </otherwise>
                </choose>
                <choose>
                    <when test="moduleCategoryId!=null">module.module_category_id=#{moduleCategoryId},</when>
                    <otherwise>
                        module.module_category_id=0,
                    </otherwise>
                </choose>
                <choose>
                    <when test="sortNum!=null">module.sort_num=#{sortNum},</when>
                    <otherwise>
                        module.sort_num=0,
                    </otherwise>
                </choose>
                <choose>
                    <when test="moduleTitle!=null">module.module_title=#{moduleTitle},</when>
                    <otherwise>
                        module.module_title='',
                    </otherwise>
                </choose>
                module.id = id
        where 1=1
            and module.id = #{id}

    </update>
    <update id="updateModuleWithoutNull" parameterType="Module">
        update module module set
                <choose>
                    <when test="moduleName!=null">module.module_name=#{moduleName},</when>
                </choose>
                <choose>
                    <when test="moduleUrl!=null">module.module_url=#{moduleUrl},</when>
                </choose>
                <choose>
                    <when test="moduleCategoryId!=null">module.module_category_id=#{moduleCategoryId},</when>
                </choose>
                <choose>
                    <when test="sortNum!=null">module.sort_num=#{sortNum},</when>
                </choose>
                <choose>
                    <when test="moduleTitle!=null">module.module_title=#{moduleTitle},</when>
                </choose>
            module.id = id
        where 1=1
            and module.id = #{id}

    </update>
    <update id="updateModuleByWhereSql" parameterType="hashmap">
        update module module set
                <choose><when test="moduleName!=null">module.module_name=#{moduleName},</when></choose>
                <choose><when test="moduleUrl!=null">module.module_url=#{moduleUrl},</when></choose>
                <choose><when test="moduleCategoryId!=null">module.module_category_id=#{moduleCategoryId},</when></choose>
                <choose><when test="sortNum!=null">module.sort_num=#{sortNum},</when></choose>
                <choose><when test="moduleTitle!=null">module.module_title=#{moduleTitle},</when></choose>
            module.id = id
        where ${whereSql}
    </update>

    <delete id="truncateModule">
        truncate table module
    </delete>

    <delete id="deleteModule" parameterType="hashmap">
        delete module from module module where 1=1
            and module.id = #{id}
    </delete>

    <delete id="deleteModuleList" parameterType="hashmap">
        delete module from module module where
        <include refid="whereSqlModule"/>
    </delete>

    <delete id="deleteModuleByWhereSql" parameterType="hashmap">
        delete module from module module where ${whereSql}
    </delete>

    <delete id="batchDeleteModule" parameterType="java.util.List">
        delete module from module module where module.id in
        <foreach item="id" index="index" collection="list" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <delete id="batchDeleteModuleList" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            delete module from module module where
            1=1
                    and module.id = #{item.id}
        </foreach>
    </delete>

    <insert id="batchInsertModule" parameterType="java.util.List">
        insert into module (
            `module_name`,
            `module_url`,
            `module_category_id`,
            `sort_num`,
            `module_title`
        )
        values
        <foreach collection="list" item= "item" index ="index" separator=",">
            (
                <choose><when test="item.moduleName==null">  ''  </when><otherwise>#{item.moduleName}</otherwise></choose> ,
                <choose><when test="item.moduleUrl==null">  ''  </when><otherwise>#{item.moduleUrl}</otherwise></choose> ,
                <choose><when test="item.moduleCategoryId==null">  '0'  </when><otherwise>#{item.moduleCategoryId}</otherwise></choose> ,
                <choose><when test="item.sortNum==null">  '0'  </when><otherwise>#{item.sortNum}</otherwise></choose> ,
                <choose><when test="item.moduleTitle==null">  ''  </when><otherwise>#{item.moduleTitle}</otherwise></choose> 
            )
        </foreach >
    </insert>

    <update id="batchUpdateModule"  parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update module module
            <set>
                <choose><when test="item.moduleName!=null">module.module_name=#{item.moduleName},</when></choose>
                <choose><when test="item.moduleUrl!=null">module.module_url=#{item.moduleUrl},</when></choose>
                <choose><when test="item.moduleCategoryId!=null">module.module_category_id=#{item.moduleCategoryId},</when></choose>
                <choose><when test="item.sortNum!=null">module.sort_num=#{item.sortNum},</when></choose>
                <choose><when test="item.moduleTitle!=null">module.module_title=#{item.moduleTitle},</when></choose>
                    module.id = id
            </set>
            where 1=1
                and module.id = #{item.id}
        </foreach>
    </update>

<!-- 外键字段一对一关联查询模块 begin-->
    <sql id="fromForeignTable">
        <if test="">
            ,module_category moduleCategory
        </if>
    </sql>
    <sql id="whereForeignDbField">
            <if test="">
                and module.module_category_id = moduleCategory.id
            </if>
    </sql>
    <sql id="whereForeignFormQuery">
    </sql>
    <select id="getModuleOneToOneRelateList" parameterType="hashmap" resultType="Module">
        select <include refid="selectSqlModule"/>
        from module module <include refid="fromForeignTable"/>
        where   <include refid="whereSqlModule"/>
        <include refid="whereForeignDbField"/>
        <include refid="whereForeignFormQuery"/>
        <if test="whereSql!=null"> ${whereSql}</if>
        <if test="orderBy != null"> order by  ${orderBy} </if>
        <if test="limit != null"> LIMIT #{limitIndex},#{limit} </if>
    </select>
    <select id="getModuleOneToOneRelateListCount" parameterType="hashmap" resultType="int">
        select count(1)
        from module module <include refid="fromForeignTable"/>
        where   <include refid="whereSqlModule"/>
        <include refid="whereForeignDbField"/>
        <include refid="whereForeignFormQuery"/>
    </select>
<!-- 外键字段一对一关联查询模块 end-->

    <!-- sql end-->
    <!-- 本文件对于研发人员 只读 不能修改 =================================================================================================================================================== -->
</mapper>
