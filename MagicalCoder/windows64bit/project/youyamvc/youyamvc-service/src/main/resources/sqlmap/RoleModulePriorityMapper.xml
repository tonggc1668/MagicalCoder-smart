<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* Created by www.magicalcoder.com
* 如果你改变了此类 read 请将此行删除
* 799374340@qq.com
-->
<mapper namespace="RoleModulePriorityMapper">
    <!-- RoleModulePriority -->
    <sql id="createTable">
    DROP TABLE `role_module_priority`;
    CREATE TABLE `role_module_priority` (
        PRIMARY KEY (`id`) ,
        `id` bigint(20) NOT NULL  AUTO_INCREMENT  COMMENT '主键' ,
 KEY (`role_id`) , UNIQUE KEY `uniq_role_id` (`role_id`) ,
        `role_id` bigint(20) COMMENT '角色'  DEFAULT  '0' ,
 KEY (`module_id`) , UNIQUE KEY `uniq_module_id` (`module_id`) ,
        `module_id` bigint(20) COMMENT '模块'  DEFAULT  '0' ,
 KEY (`priority_id`) ,
        `priority_id` bigint(20) COMMENT '权限'  DEFAULT  '0' 
    )
    </sql>
    <sql id="selectSqlRoleModulePriority">
        roleModulePriority.id ,
        roleModulePriority.role_id roleId,
        roleModulePriority.module_id moduleId,
        roleModulePriority.priority_id priorityId
    </sql>

   <sql id="whereSqlRoleModulePriority">
        <if test="id!=null "> and roleModulePriority.id = #{id}</if>
        <if test="roleId!=null "> and roleModulePriority.role_id = #{roleId}</if>
        <if test="moduleId!=null "> and roleModulePriority.module_id = #{moduleId}</if>
        <if test="priorityId!=null "> and roleModulePriority.priority_id = #{priorityId}</if>
                <if test="roleIdFirst!=null "> and roleModulePriority.role_id <![CDATA[=]]>
                            #{roleIdFirst}
                </if>
                <if test="moduleIdFirst!=null "> and roleModulePriority.module_id <![CDATA[=]]>
                            #{moduleIdFirst}
                </if>
                <if test="priorityIdFirst!=null "> and roleModulePriority.priority_id <![CDATA[=]]>
                            #{priorityIdFirst}
                </if>
        <if test="whereSql!=null"> ${whereSql}</if>
    </sql>

    <insert id="insertRoleModulePriority" parameterType="RoleModulePriority" >
        <selectKey resultType="Long" order="AFTER" keyProperty="id" >
            <choose>
                <when test="id==null">
                    SELECT LAST_INSERT_ID() AS id
                </when>
                <otherwise>SELECT #{id} as id</otherwise>
            </choose>
        </selectKey>
        insert into role_module_priority (
    <if test="id!=null">`id`,</if>
            `role_id`,            `module_id`,            `priority_id`        )
        values(
            <if test="id!=null">#{id`},</if>
            <choose>
                <when test="roleId==null">
                         '0'
                </when>
                <otherwise>#{roleId}</otherwise>
            </choose>,            <choose>
                <when test="moduleId==null">
                         '0'
                </when>
                <otherwise>#{moduleId}</otherwise>
            </choose>,            <choose>
                <when test="priorityId==null">
                         '0'
                </when>
                <otherwise>#{priorityId}</otherwise>
            </choose>        )
    </insert>

    <sql id="orderGroupLimit">
        <if test="groupBy != null"> group by  ${groupBy} </if>
        <if test="orderBy != null"> order by  ${orderBy} </if>
        <if test="limit != null"> LIMIT #{limitIndex},#{limit} </if>
    </sql>
    <select id="getRoleModulePriority" parameterType="hashmap" resultType="RoleModulePriority">
        select <include refid="selectSqlRoleModulePriority"/> from role_module_priority roleModulePriority where 1=1 <include refid="whereSqlRoleModulePriority"/> <include refid="orderGroupLimit"/>
    </select>
    <select id="getRoleModulePriorityList" parameterType="hashmap" resultType="RoleModulePriority">
        select <include refid="selectSqlRoleModulePriority"/> from role_module_priority roleModulePriority where 1=1 <include refid="whereSqlRoleModulePriority"/> <include refid="orderGroupLimit"/>
    </select>
    <select id="getRoleModulePriorityListCount" parameterType="hashmap" resultType="int">
        select count(1)  from role_module_priority roleModulePriority
        where 1=1 <include refid="whereSqlRoleModulePriority"/> <if test="groupBy != null"> group by  ${groupBy} </if>
    </select>

    <update id="updateRoleModulePriority" parameterType="RoleModulePriority">
        update role_module_priority roleModulePriority set
                <choose>
                    <when test="roleId!=null">roleModulePriority.role_id=#{roleId},</when>
                    <otherwise>
                        roleModulePriority.role_id=0,
                    </otherwise>
                </choose>
                <choose>
                    <when test="moduleId!=null">roleModulePriority.module_id=#{moduleId},</when>
                    <otherwise>
                        roleModulePriority.module_id=0,
                    </otherwise>
                </choose>
                <choose>
                    <when test="priorityId!=null">roleModulePriority.priority_id=#{priorityId},</when>
                    <otherwise>
                        roleModulePriority.priority_id=0,
                    </otherwise>
                </choose>
                roleModulePriority.id = id
        where 1=1
            and roleModulePriority.id = #{id}

    </update>
    <update id="updateRoleModulePriorityWithoutNull" parameterType="RoleModulePriority">
        update role_module_priority roleModulePriority set
                <choose>
                    <when test="roleId!=null">roleModulePriority.role_id=#{roleId},</when>
                </choose>
                <choose>
                    <when test="moduleId!=null">roleModulePriority.module_id=#{moduleId},</when>
                </choose>
                <choose>
                    <when test="priorityId!=null">roleModulePriority.priority_id=#{priorityId},</when>
                </choose>
            roleModulePriority.id = id
        where 1=1
            and roleModulePriority.id = #{id}

    </update>
    <update id="updateRoleModulePriorityByWhereSql" parameterType="hashmap">
        update role_module_priority roleModulePriority set
                <choose><when test="roleId!=null">roleModulePriority.role_id=#{roleId},</when></choose>
                <choose><when test="moduleId!=null">roleModulePriority.module_id=#{moduleId},</when></choose>
                <choose><when test="priorityId!=null">roleModulePriority.priority_id=#{priorityId},</when></choose>
            roleModulePriority.id = id
        where ${whereSql}
    </update>

    <delete id="truncateRoleModulePriority">
        truncate table role_module_priority
    </delete>

    <delete id="deleteRoleModulePriority" parameterType="hashmap">
        delete roleModulePriority from role_module_priority roleModulePriority where 1=1
            and roleModulePriority.id = #{id}
    </delete>

    <delete id="deleteRoleModulePriorityList" parameterType="hashmap">
        delete roleModulePriority from role_module_priority roleModulePriority where
        <include refid="whereSqlRoleModulePriority"/>
    </delete>

    <delete id="deleteRoleModulePriorityByWhereSql" parameterType="hashmap">
        delete roleModulePriority from role_module_priority roleModulePriority where ${whereSql}
    </delete>

    <delete id="batchDeleteRoleModulePriority" parameterType="java.util.List">
        delete roleModulePriority from role_module_priority roleModulePriority where roleModulePriority.id in
        <foreach item="id" index="index" collection="list" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <delete id="batchDeleteRoleModulePriorityList" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            delete roleModulePriority from role_module_priority roleModulePriority where
            1=1
                    and roleModulePriority.id = #{item.id}
        </foreach>
    </delete>

    <insert id="batchInsertRoleModulePriority" parameterType="java.util.List">
        insert into role_module_priority (
            `role_id`,
            `module_id`,
            `priority_id`
        )
        values
        <foreach collection="list" item= "item" index ="index" separator=",">
            (
                <choose><when test="item.roleId==null">  '0'  </when><otherwise>#{item.roleId}</otherwise></choose> ,
                <choose><when test="item.moduleId==null">  '0'  </when><otherwise>#{item.moduleId}</otherwise></choose> ,
                <choose><when test="item.priorityId==null">  '0'  </when><otherwise>#{item.priorityId}</otherwise></choose> 
            )
        </foreach >
    </insert>

    <update id="batchUpdateRoleModulePriority"  parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update role_module_priority roleModulePriority
            <set>
                <choose><when test="item.roleId!=null">roleModulePriority.role_id=#{item.roleId},</when></choose>
                <choose><when test="item.moduleId!=null">roleModulePriority.module_id=#{item.moduleId},</when></choose>
                <choose><when test="item.priorityId!=null">roleModulePriority.priority_id=#{item.priorityId},</when></choose>
                    roleModulePriority.id = id
            </set>
            where 1=1
                and roleModulePriority.id = #{item.id}
        </foreach>
    </update>

<!-- 外键字段一对一关联查询模块 begin-->
    <sql id="fromForeignTable">
        <if test="">
            ,role role
        </if>
        <if test="">
            ,module module
        </if>
        <if test="">
            ,priority priority
        </if>
    </sql>
    <sql id="whereForeignDbField">
            <if test="">
                and roleModulePriority.role_id = role.id
            </if>
            <if test="">
                and roleModulePriority.module_id = module.id
            </if>
            <if test="">
                and roleModulePriority.priority_id = priority.id
            </if>
    </sql>
    <sql id="whereForeignFormQuery">
    </sql>
    <select id="getRoleModulePriorityOneToOneRelateList" parameterType="hashmap" resultType="RoleModulePriority">
        select <include refid="selectSqlRoleModulePriority"/>
        from role_module_priority roleModulePriority <include refid="fromForeignTable"/>
        where   <include refid="whereSqlRoleModulePriority"/>
        <include refid="whereForeignDbField"/>
        <include refid="whereForeignFormQuery"/>
        <if test="whereSql!=null"> ${whereSql}</if>
        <if test="orderBy != null"> order by  ${orderBy} </if>
        <if test="limit != null"> LIMIT #{limitIndex},#{limit} </if>
    </select>
    <select id="getRoleModulePriorityOneToOneRelateListCount" parameterType="hashmap" resultType="int">
        select count(1)
        from role_module_priority roleModulePriority <include refid="fromForeignTable"/>
        where   <include refid="whereSqlRoleModulePriority"/>
        <include refid="whereForeignDbField"/>
        <include refid="whereForeignFormQuery"/>
    </select>
<!-- 外键字段一对一关联查询模块 end-->

    <!-- sql end-->
    <!-- 本文件对于研发人员 只读 不能修改 =================================================================================================================================================== -->
</mapper>
